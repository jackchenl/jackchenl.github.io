[{"title":"递归详解","url":"/2022/08/14/递归详解/","content":"\n## 前言\n你有没有过这样的一个困恼，对于递归的整个过程似解非解的，还有一些二叉树的前、中、后序遍历也是不知所以然，那么今天就让我们真正的了解一些它。\n<!-- more -->\n## 什么是递归呢？\n用通俗的话讲就是，你从1数到10，再从10数到1的这么一个过程。从1到10就是递的过程，从10到1就是归的过程。所以相对迭代器，递归的性能是不好的，但代码相对更通俗易懂些。"},{"title":"iphone手机上的兼容问题","url":"/2021/11/27/iphone手机上的兼容问题/","content":"\n## 问题：\n\n1. URL 里面不能包含任何中文\n   问题：URL 会被不正确的 encode，导致 react router 无法解析 URL，路由失效\n   **解决方案**： 咱就别在 URL path 里放中文呗 （参考案例，小陈仔的各种血与泪）\n   <!--more-->\n2. 对于 input 元素，获得焦点后，点击空白区域不失去焦点\n   问题：导致软键盘不收起\n   **解决方案**：显式的控制 IOS 的失焦，参考两个库的搜索相关代码\n3. Photoswipe 控件在 webview 诡异的不好好展示，例如 不全屏，伪全屏，尝试全屏又往下漂移等\n   问题： 根本原因没找到，大致原因就是把 photoswipe 放在一个浮动的 div 容器里面的时候，例如 bootstrap 里的（Col）时候，各种诡异就出现了\n   **解决方案**：别把 photoswipe 放在浮动元素里。\n4. webview 的 cookie 设置进去后，不立即生效导致的各种类似未登录的假象\n   问题原因：没找到，欢迎投稿提供原因和解决方案\n   **解决方案**：目前采用了绕过去的方式，就是网页支持通过 url parameter 传入 token，目前工作的很好。\n5. 阿里云 oss 的 https, 默认情况下阿里云 oss 直接就支持 https 切换，但如果要使用图片处理功能，例如剪切，旋转，内切圆，就一定不能使用第一代图片处理 api (例如@100w_100h.png), 必须要使用第二代处理方法，如（?x-oss-process=image/resize,w_1000,h_250),详情参考：[阿里云帮助文档](https://help.aliyun.com/document_detail/44975.html?spm=5176.doc44976.6.497.zw4h6G)\n   **注意了**：阿里云的图片处理域名不支持 https，所以要用 https 的同学，赶紧的切换成标准外网域名，\n","tags":["遇坑集锦"]},{"title":"有关ssh的问题（持续更新）","url":"/2021/11/26/有关ssh的问题（持续更新）/","content":"\n## 1、\n\n### 问题：当使用 ssh 到 服务器 遇到这种错误时：\n\n<!-- more -->\n\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@ WARNING: UNPROTECTED PRIVATE KEY FILE! @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nPermissions 0644 for '/Users/Jackchen/.ssh/wy_test_rsa' are too open.\nIt is required that your private key files are NOT accessible by others.\nThis private key will be ignored.\nLoad key \"/Users/Jackchen/.ssh/wy_test_rsa\": bad permissions\nadministrator@118.242.19.30: Permission denied (publickey).\nssh_exchange_identification: Connection closed by remote host\n\n### 解决方案：运行这个命令：chmod 600 wy_test_rsa 更改文件的权限\n\n## 2、\n\n### 问题：\n\n![](20211127173608.png)\n\n### 解决方案：\n\n```\nssh-keygen -R IP地址\n```\n\neg:\n\n```\nssh-keygen -R 192.168.0.1\n```\n\n![](20211127173623.png)\n\n## 参考：\n\n1. [mac 查看、修改文件权限的命令](https://blog.csdn.net/x1876631/article/details/70162009) --这个是解释的最清楚\n2. [Linux 权限详解](https://blog.csdn.net/u013197629/article/details/73608613?locationNum=10&fps=1)\n3. [解决 Host key verification failed.(亲测有效)](https://blog.csdn.net/wd2014610/article/details/85639741)\n","tags":["算法"]},{"title":"如何更新搜索引擎搜索出来的网站title","url":"/2021/11/26/如何更新搜索引擎搜索出来的title/","content":"\n## 背景\n\n某一次 BOSS 叫我去更新网站的 title，当我把所有文件中的 title 都更新完并部署后，我再次通过百度搜索，依旧发现搜索出来的结果没有更新。这时翻阅资料发现搜索引擎不是实时更新的，而是定期更新一波，但如果网站急需更新，我们该如何办呢？下面介绍三个搜索引擎的更新步骤：\n\n<!-- more -->\n\n## 百度\n\n到百度服务中心 提交快照更新和删除。\nhttp://tousu.baidu.com/webmaster/add?rdm=1dad7lpmk#1 - 2020.8.1\nhttps://tousu.baidu.com/newadd?prod_id=1&category=1 -2021.11.11\n\n## 谷歌\n\n到[谷歌搜索控制台](https://search.google.com/search-console/inspect)，去请求编入索引,会快速的更新最新的索引信息（但大概也需要 1~2 天），否则就需要等搜索引擎定期更新了。\neg:\n![](20211127183637.png)\n\n## 必应\n\n到[必应搜索控制台](https://www.bing.com/webmasters/keywordresearch)，同谷歌一样。\neg:\n![](20211127184839.png)\n\n## 参考：\n\n[请求 Google 重新抓取您的网址](https://developers.google.com/search/docs/advanced/crawling/ask-google-to-recrawl?hl=zh-cn)\n[谷歌站长工具怎么用，Google Search Console 使用教程](https://www.yundianseo.com/google-search-console/)\n[10 个让谷歌索引网站的方法（真实可行）](https://ahrefs.com/blog/zh/google-index/)\n[网址检查工具](https://support.google.com/webmasters/answer/9012289#will_i_be_indexed&zippy=%2C%E5%8F%AF%E5%90%A6%E7%BC%96%E5%85%A5%E7%B4%A2%E5%BC%95%E5%AE%9E%E6%97%B6%E6%B5%8B%E8%AF%95)\n","tags":["遇坑集锦"]},{"title":"搭建官网的遇坑集锦","url":"/2021/09/09/搭建官网的遇坑集锦/","content":"\n## mysql 登录不进去的问题\n\n解决方案：加 sudo 才可以执行 mysql</br>\n\n```\n1 sudo mysql -u root -p\n2 systemctl restart httpd.service --重启Apache 服务器\n```\n<!-- more -->\n## 如何在 liunx 环境下，修改文件夹的权限\n\n加入-R 参数，就可以将读写权限传递给子文件夹，其中 777 意思指读、写、执行权限。\n\n```\n1 chmod -R 777 /home/mypackage\n```\n\n执行完上面命令后，mypackage 文件夹和它下面的所有子文件夹的属性都变成了 777.\n\n## 安装 PHP 包，使用 yum -- 注意版本号：安装 和 php-fpm\n\n### 1) 检查当前安装的 PHP 包\n\n```\nyum list installed | grep php\n```\n\n### 2）如果有安装的 PHP 包，需要先删除它们\n\n```\nyum remove php.x86_64 php-cli.x86_64 php-common.x86_64 php-gd.x86_64 php-ldap.x86_64 php-mbstring.x86_64 php-mcrypt.x86_64 php-mysql.x86_64 php-pdo.x86_64\n```\n\n### 3）更换 rpm 源\n\n```\nrpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpm\nrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n```\n\n### 4）如果想删除上面安装的包 rpm -qa | grep webstaticrpm -e 上面搜索到的包即可\n\n```\nyum install php70w -y\nyum install php70w-mysql -y //如果当前找不到安装包时，需要自行切换rpm源\n```\n\n### 5）安装 php7.0\n\n```\nyum remove php.x86_64 php-cli.x86_64 php-common.x86_64 php-gd.x86_64 php-ldap.x86_64 php\nyum install php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w\n```\n\n### 6）安转 php-fpm\n\n```\n1 yum install php70w-fpm\n```\n\n### 7）以上安装完成后，需要更改文件夹的权限：\n\n```\n1 chown -hR apache /var/www/html\n```\n\n### 具体参考：15\n\n## 发生以下错误信息时\n\n```\nerror message：*86234 connect() to unix:/var/run/php-fpm/www.sock failed (13: Permission denied) while connecting to upstream, client: 10.110.7.181, server: localhost, request: \"GET /index.php HTTP/1.1\", upstream: \"fastcgi://unix:/var/run/php-fpm/www.sock:\", host: \"10.110.254.74\"\n```\n\n使用 vargant 用户 解决 php-fpm 的权限问题\n\n```\ntail -f /var/log/nginx/error.log //查看log\ntail -f /var/log/nginx/access.log //查看 访问\n```\n\n## 白屏问题 ：\n\n在 nginx.conf 中加入：\n\n```\n1 fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n```\n\n修改 /etc/php-fpm.d/www.conf 文件：\n\n```\n1 vim /etc/php/7.1/fpm/php.ini\n2 //;cgi.fix_pathinfo=1 改为\n3 cgi.fix_pathinfo= 0\n```\n\n## 关于 liunx 的一些命令使用：\n\nlinux 下查看 端口号\n\n```\nlsof -i:端口号\nnetstat -tunlp|grep 端口号\nnetstat -nap | grep 1095\nkill - 9 1095\n```\n\nlinux 下 查看 端口号\n1 Run any one of the following command on Linux to see open ports:\n\n```\nsudo lsof -i -P - n | grep LISTEN\nsudo netstat -tulpn | grep LISTEN\nsudo lsof -i: 22 ## see a specific port such as 22 ##\nsudo nmap -sTU -O IP-address-Here\nsudo lsof -i -P - n | grep LISTEN\n```\n\n## 查看 linux 的版本号\n\n```\ncat /proc/version --linux 的内核\ncat /etc/redhat-release\n```\n\n## 参考：\n\n### 1. [Ubuntu 使用 Nginx 搭建 WordPress](https://www.cnblogs.com/tecliu/p/9882472.html)\n\n### 2. [Install WordPress with Nginx on CentOS 7 / RHEL 7](https://www.itzgeek.com/web/wordpress/install-wordpress-with-nginx-1-6-on-centos-7-rhel-7.html)\n\n### 3. [How to install WordPress with Nginx on CentOS 7](https://linuxize.com/post/how-to-install-wordpress-with-nginx-on-centos-7/)\n\n### 4. [How To Install Wordpress with nginx on Ubuntu 12.04](https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-nginx-on-ubuntu-12-04)\n\n### 5. [This example is for newer PHP (>= 5.3.3) using the included PHP FPM (FastCGI Process Manager)](https://www.nginx.com/resources/wiki/start/topics/examples/phpfcgi/)\n\n### 6. [Full Example Configuration](https://www.nginx.com/resources/wiki/start/topics/examples/full/)\n\n### 7. [mysql CRUD command](https://www.cnblogs.com/sqbk/p/5806797.html)\n\n### 8. [centos 中的解压命令](https://www.cnblogs.com/ftl1012/p/9255795.html)\n\n### 9. [阿里云安装 wordpress](http://www.cnblogs.com/smyhvae/p/4965163.html)\n\n### 10. ** [零基础教你用 WordPress 搭建个人网站](https://www.jianshu.com/p/e017a2ea7991?utm_source=oschina-app) **\n\n### 11. [WordPress 切换到 Nginx 服务器](https://www.williamlong.info/archives/5769.html)\n\n### 12. [查看 linux 版本号](http://baijiahao.baidu.com/s?id=1601324352730835989&wfr=spider&for=pc)\n\n### 13. [修改 apache 的端口号,使用 semanage 查看已经 listen 的端口](https://www.cnblogs.com/hoby2017/p/9930019.html)\n\n### 14. [查端口号](https://www.cnblogs.com/wangzehuaw/p/8866169.html)\n\n### 15. [Centos7 下 Yum 更新安装 PHP5.5,5.6,7.0](https://blog.51cto.com/13718210/2318669)\n\n### 16. [chmod 每个代号代表的意思](https://blog.csdn.net/zhugefubin/article/details/43952393)\n\n### 17. [linux:scp 远程拷贝文件出现 permission denied,please try again 的解决办法](https://www.jianshu.com/p/a8b48260dfdd)\n\n### 18. [scp 出现 Permission denied,please try again 的解决办法](https://www.cnblogs.com/xuliangxing/p/7428737.html)\n\n### 19. [linux 下设置开机启动服务程序](https://blog.csdn.net/qq_16743379/article/details/51325587)\n"},{"title":"中文输入法与React文本输入框的问题与解决方案","url":"/2021/05/29/中文输入法与React文本输入框的问题与解决方案/","content":"\n## 背景：\n在做实时搜索时，当input 框里，如果正在使用中文输入的话，会导致后端API 会报错，因为传给后端API的值为 zhong'guo 这种形式的字母，并且做了无用的查询，\n<!-- more -->\n## 我的思路：\n有一个监听事件用来监听用户是否正在输入拼音中，从而做到 正在输入拼音时，不去发请求。\n\n## 最后的解决方案：\n\n### 大体思路：\n    通过一个是否在输入中文的状态来控制向后端发请求，\n\n### 具体细节：\n\n1、在onCompositionStart（即开始输入中文时）中设置这个标志符为true。\n\n2、在onCompositionEnd事件中置为false，并且调用API。\n\n3、在OnChange 时，通过标志符来判断是否调用API，（PS：这里特别需要注意，无论标志符状态如何，都要把用户输入的值放入 input 输入框中，否则不会触发 onCompositionEnd事件）。\n\n关于兼容性的问题，需要另议\n\n### 参考文档：\n\n[中文输入法与React文本输入框的问题与解决方案](https://segmentfault.com/a/1190000008023476)\n\n[react根据中文获取拼音_解决 React 中的 input 输入框在中文输入法下的 bug_weixin_39796116的博客-CSDN博客](https://blog.csdn.net/weixin_39796116/article/details/111810913)\n\n[compositionstart and compositionend 解决输入法输入问题](https://gist.github.com/hjzheng/40290e835602f573600d365cd628ed56)","tags":["遇坑集锦"]},{"title":"移动端上传图片不工作的问题","url":"/2020/08/23/移动端上传图片不工作的问题/","content":"\n## 问题一：华为的鸿蒙手机上传图片无法打开相应的图片库\n\n<!-- more -->\n\n### 解决方案：\n\n1. 确定在哪个环境打开的，不同 APP 打开上传图片的动作是不一样的，会导致不同的行为。（建议，不要在 email 的 APP 里打开，复制链接或者点击页面右上角的按钮，在其他浏览器中打开）\n2. 确定打开页面的浏览器有访问图片的权限\n\n## 参考:\n\n[移动端 H5 图片上传的那些坑](https://segmentfault.com/a/1190000006140042)\n","tags":["算法"]},{"title":"rsync的同步","url":"/2020/05/27/rsync的同步/","content":"\n## 问题记录：\n\n1、记一个 rsync 不能执行的错误：\nbash rsync 未发现该命令。\nerror in rsync protocol data stream (code 12) at io.c(226)\n原因是服务器端没有安装 rsync 导致的。运行 rsync 本地机器和服务器都需要安装。\n\n<!--more -->\n\n## 基本使用法：\n\n-v, --verbose 详细模式输出。\n-q, --quiet 精简输出模式。\n-c, --checksum 打开校验开关，强制对文件传输进行校验。\n-a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于 -rlptgoD。\n-r, --recursive 对子目录以递归模式处理。\n-R, --relative 使用相对路径信息。\n-b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为 ~filename。可以使用 --suffix 选项来指定不同的备份文件前缀。\n--backup-dir 将备份文件（~filename）存放在在目录下。\n-suffix=SUFFIX 定义备份文件前缀。\n-u, --update 仅仅进行更新，也就是跳过所有已经存在于 DST，并且文件时间晚于要备份的文件。（不覆盖更新的文件。）\n-l, --links 保留软链结。\n-L, --copy-links 想对待常规文件一样处理软链结。\n--copy-unsafe-links 仅仅拷贝指向 SRC 路径目录树以外的链结。\n--safe-links 忽略指向 SRC 路径目录树以外的链结。\n-H, --hard-links 保留硬链结。\n-p, --perms 保持文件权限。\n-o, --owner 保持文件属主信息。\n-g, --group 保持文件属组信息。\n-D, --devices 保持设备文件信息。\n-t, --times 保持文件时间信息。\n-S, --sparse 对稀疏文件进行特殊处理以节省 DST 的空间。\n-n, --dry-run 显示哪些文件将被传输（新增、修改和删除）。\n-W, --whole-file 拷贝文件，不进行增量检测。\n-x, --one-file-system 不要跨越文件系统边界。\n-B, --block-size=SIZE 检验算法使用的块尺寸，默认是 700 字节。\n-e, --rsh=COMMAND 指定使用 rsh, ssh 方式进行数据同步。\n--rsync-path=PATH 指定远程服务器上的 rsync 命令所在路径信息。\n-C, --cvs-exclude 使用和 CVS 一样的方法自动忽略文件，用来排除那些不希望传输的文件。\n--existing 仅仅更新那些已经存在于 DST 的文件，而不备份那些新创建的文件。\n--delete 删除那些 DST 中 SRC 没有的文件。\n--delete-excluded 同样删除接收端那些被该选项指定排除的文件。\n--delete-after 传输结束以后再删除。\n--ignore-errors 即使出现 IO 错误也进行删除。\n--max-delete=NUM 最多删除 NUM 个文件。\n--partial 保留那些因故没有完全传输的文件，以便实现断点续传。\n--force 强制删除目录，即使不为空。\n--numeric-ids 不将数字的用户和组 ID 匹配为用户名和组名。\n--timeout=TIME IP 超时时间，单位为秒。\n-I, --ignore-times 不跳过那些有同样的时间和长度的文件。\n--size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。\n--modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为 0。\n-T --temp-dir=DIR 在 DIR 中创建临时文件。\n--compare-dest=DIR 同样比较 DIR 中的文件来决定是否需要备份。\n--progress 显示传输过程。\n-P 等同于 -partial -progress。\n-z, --compress 对备份的文件在传输时进行压缩处理。\n--exclude=PATTERN 指定排除不需要传输的文件模式。\n--include=PATTERN 指定不排除而需要传输的文件模式。\n--exclude-from=FILE 排除 FILE 中指定模式的文件。\n--include-from=FILE 不排除 FILE 指定模式匹配的文件。\n--version 打印版本信息。\n--address 绑定到特定的地址。\n--config=FILE 指定其他的配置文件，不使用默认的 rsyncd.conf 文件。\n--port=PORT 指定其他的 rsync 服务端口。\n--blocking-io 对远程 shell 使用阻塞 IO。\n--stats 给出某些文件的传输状态。\n--log-format=formAT 指定日志文件格式。\n--password-file=FILE 从 FILE 中得到密码。\n--bwlimit=KBPS 限制 I/O 带宽，KBytes per second。\n-h, --help 显示帮助信息。\n\n## 执行脚本：\n\n```\n#!/usr/bin/env bash\necho \"start build rsync site project：$(date)\";\nuser=root;\nremote_host=(\"xxxx\");\nbuild_dir=build;\n\nmkdir -p $build_dir/wp-content;\nmkdir -p $build_dir/en/wp-content;\n\n#function downloadFile(){\n\t#echo \"start download folder\" $1;\n\t#rsync -rtugovzP $user@$1:/var/www/html/wp-content/ $build_dir/wp-content/;\n\t#rsync -rtugovzP $user@$1:/var/www/html/en/wp-content/ $build_dir/en/wp-content/;\n    #rsync -rtugovzP $user@$1:/var/www/html/style/ $build_dir/style/;\n    #rsync -rtugovzP $user@$1:/var/www/html/en/style/ $build_dir/en/style/;\n\t#echo \"end download folder\" $1;\n#}\n\nfunction uploadFile(){\n\techo \"start upload folder\" $1;\n\trsync -rtgovzP $build_dir/wp-content/themes/hrsaas/ $user@$1:/var/www/html/wp-content/themes/hrsaas/;\n\trsync -rtgovzP $build_dir/en/wp-content/themes/hrsaas/ $user@$1:/var/www/html/en/wp-content/themes/hrsaas/;\n    rsync -rtugovzP $build_dir/style/css/  $user@$1:/var/www/html/style/css/;\n    rsync -rtugovzP $build_dir/en/style/css/  $user@$1:/var/www/html/en/style/css/;\n\techo \"end upload folder \"$1;\n}\n\n#downloadFile ${remote_host[0]};\n#downloadFile ${remote_host[1]};\n\nuploadFile ${remote_host[0]};\n#uploadFile ${remote_host[1]};\n\necho \"end build rsync site project：$(date)\";\n```\n\n## 参考文章：\n\n[rsync 的基本用法](https://segmentfault.com/a/1190000015669114)\n[rsync 参数说明及使用参数笔记好文摘抄](https://www.cnblogs.com/koushuige/p/9162920.html)\n[rsync 常见问题及解决办法（亲测）](https://blog.whsir.com/post-392.html)\n","tags":["遇坑集锦"]},{"title":"递归函数原理技能包了解一下","url":"/2018/11/27/递归函数原理技能包了解一下/","content":"最近在看一本书：算法图解，然后刚好看到了递归，自以为很简单的嘛，然后就啪啪啪的打脸了。为啥原因被打脸呢？请看下面简单的递归求数组和的函数：<br/>\n<!-- more -->\n```\nfunction sum (arr, value){\n    if(arr.length){\n        value +=  arr.pop();\n        sum(arr,value);\n    }\n    return value;\n}\nsum([1,2,3],0);\n\n```\n\n如果执行以上代码，你会发现：最终结果返回了3。当时很是纳闷？为什么会产生这个结果呢，<br/>\n\n带着这个疑问 我就好好又温习了一遍递归章节<br/>\n首先你必须知道 递归的两大条件：基线条件和递归条件<br/>\n    &nbsp;&nbsp;**1、基线条件：指的是停止调用自己的条件**<br/>\n    &nbsp;&nbsp;**2、递归条件：指的是调用自身的条件**<br/>\n\n知道了两大条件后我们还需要了解到 递归函数的原理：既计算机是如何调用递归式的函数：<br/>\n    &nbsp;&nbsp;**1、计算机中有一个调用栈的内存空间，这个空间 专门用于存放计算机将要调用的函数列表。** <br/>\n    &nbsp;&nbsp;**2、调用栈的两种使用方式，压入栈和弹出栈，这两个方法，好似存放和再拿出来使用。**<br/>\n    &nbsp;&nbsp;**3、递归函数，其实刚开始执行时，是先把已知的待执行函数都存放到调用栈中，然后依次执行，由于栈是先进后出的，所以递归函数的执行顺序是和我们想象中的有所不同的。**<br/>\n\n好了，了解完递归的原理后，我们再拿开篇的函数sum 执行你会发现，刚开始执行时：sum([1,2],3)被放到待执行栈中。然后依次是sum([1],5)、sum([],6)\n因为栈的特性：所以执行顺序刚好是相反的，sum([],6)  =>  sum([1],5)  =>  sum([1,2],3)  所以我们最终得到的 3<br/>\n<br/>\n具体执行顺序请看完整的流程图：<br/>\n\n![](16754b8785bdbab5.jpg)\n\n其实正确的写法很简单，并不需要传递多余的参数：<br/>\n```\nfunction sum(arr){\n    if(arr.length){\n        return arr.pop()  +  sum(arr)\n    }\n    return 0\n}\nsum([1,2,3]);\n```\n你get 到递归函数的技能了吗？\n","tags":["算法"]},{"title":"css网页的几种布局","url":"/2018/01/08/css网页的几种布局/","content":"## 前言\n2018年已经过了一周，总结一下2017年在公司wiki上写的一篇关于css布局的知识，当时也借鉴了几个大神写的css布局知识，和自己在项目中遇到的坑。废话不多说。请看以下的干货。\n<!-- more -->\n## 1、左边固定，右边自适应布局的两种实现方式\n### 效果图如下：\n大屏展示：\n![](160249ed332f9635.jpg)\n小屏展示：\n![](16024a04e87f905c.jpg)\n\n### 第一种实现方式通过负边距与浮动 实现左边固定，右边自适应的布局。<br/>\n**主要代码如下：**\n```\n<style type=\"text/css\">\n\t.left{\n\t\tfloat: left;\n\t\twidth: 100%;\n\t\theight: 200px;\n\t\tbackground-color: red;\n\t}\n\t.left-content{\n\t\tmargin-left: 30%;\n\t}\n\t.right{\n\t\tfloat: left;\n\t\twidth: 30%;\n\t\tmargin-left: -100%;\n\t\theight: 200px;\n\t\tbackground-color: green;\n\t}\n\t.layout0{\n\t\tclear: both;\n\t\twidth: 100px;\n\t\theight: 100px;\n\t\tbackground-color: yellow;\n\t}\n</style>\n<body>\n\t<div id=\"body\">\n\t\t<div class=\"left\">\n\t\t\t<div class=\"left-content\">\n\t\t\t\t设置子元素的margin,然后父元素必须浮动。\n\t\t\t\t用父元素包裹，主要是因为right会覆盖left，从而导致left内容不可以看到，如果直接在left上设置margin或者padding会导致布局变化，因此只能再用一个div包裹内容，并且去除right覆盖的宽度。\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"right\">-margin必须大于或等于自身的宽度才会上移</div>\n\t\t<div class=\"layout0\"></div>\n\t</div>\n</body>\n```\n**实现过程中需要注意的是:**<br/>\n**1.** 自适应的容器需要容器包裹住，否则容器内的内容会被覆盖。<br/>\n**2.** right容器的负边距必须大于或等于自身的宽度才会上移。<br/>\n**3.** 如果right容器负边距等于自身的宽度它会靠右对齐，如果负边距等于-100%，则会靠左对齐。 <br/>\n\n### 第二种 通过浮动布局来实现左边固定，右边自适应的布局<br/>\n**主要的代码如下：**<br/>\n```\n<style type=\"text/css\">\n\t.left{\n\t\tfloat: left;\n\t\twidth: 200px;\n\t\theight: 200px;\n\t\tbackground-color: yellow;\n\t}\n\t.right{\n\t\tpadding-left: 200px;\n\t\theight: 200px;\n\t\tbackground-color: red;\n\t}\n\t@media (min-width: 650px) and (max-width: 1000px){\n\t\t.left{\n\t\t\twidth: 150px;\n\t\t}\n\t\t.right{\n\t\t\tmargin-left: 150px;\n\t\t}\n\t}\n\t@media (max-width: 640px){\n\t\t.left{\n\t\t\twidth: 100px;\n\t\t}\n\t\t.right{\n\t\t\tmargin-left: 100px;\n\t\t}\n\t}\n</style>\n<body>\n\t<div id=\"main\">\n\t\t<div class=\"left\">左边固定宽度，右边自适应</div>\n\t\t<div class=\"right\"></div>\n\t</div>\n</body>\n```\n\n**实现过程中需要注意的是：**\n**1.** left需要脱离文档流，而right只需要正常显示就可以。<br/>\n**2.** left只是覆盖在right上边，因此想要让right内容完整显示需要给right padding-left或者margin-left。<br/>\n## 2、双飞翼布局的三种实现方式<br/>\n### 效果图如下：<br/>\n大屏展示：<br/>\n![](1608cc070477792b.jpg)\n小屏展示：<br/>\n![](1608cc0e0a98e1ec.jpg)\n\n### 第一种通过负边距和浮动来实现<br/>\n**主要代码如下：**<br/>\n```\n<style type=\"text/css\">\n\t#head{\n\t\theight: 200px;\n\t\tbackground-color: yellow;\n\t}\n\t#body{\n\t\twidth: 100%;\n\t\tfloat: left;\n\t}\n\t.main{\n\t\tbackground-color: green;\n\t\tmin-height: 200px;\n\t\tmargin: 0 210px;\n\t}\n\t.left{\n\t\tfloat: left;\n\t\tbackground-color: red;\n\t\twidth: 200px;\n\t\theight: 200px;\n\t\tmargin-left: -100%;\n\t}\n\t.right{\n\t\tfloat: right;\n\t\tbackground-color: blue;\n\t\twidth: 200px;\n\t\theight: 200px;\n\t\tmargin-left: -200px;\n\t}\n\t#footer{\n\t\tclear: both;\n\t\theight: 200px;\n\t\tbackground-color: orange;\n\t}\n</style>\n<body>\n\t<div id=\"head\">即左右固定，中间自适应，它可以利用margin-left为负数来实现，它的实现原理就是margin为负值可以改变float元素的排列位置</div>\n\t<div id=\"body\">\n\t\t<div class=\"main\">当多个元素同时从标准流中脱离开来时，如果前一个元素的宽度为100%宽度，后面的元素通过负边距可以实现上移。当负的边距超过自身的宽度将上移，只要没有超过自身宽度就不会上移</div>\n\t</div>\n\t<div class=\"left\"></div>\n\t<div class=\"right\"></div>\n\t<div id=\"footer\"></div>\n</body>\n```\n**实现过程中需要注意:**<br/>\n**1.** 中间自适应的div需要放在left和right容器前面并且内容div需要用父容器包裹<br/>\n**2.** left和right容器向同一个方向浮动。<br/>\n\n### 第二种 通过浮动两边的div实现<br/>\n**主要代码如下：**<br/>\n\n```\n<style type=\"text/css\">\n\t#head{\n\t\theight: 200px;\n\t\tbackground-color: yellow;\n\t}\n\t#body{\n\t\toverflow: hidden;\n\t}\n\t.left{\n\t\tfloat: left;\n\t\tbackground-color: red;\n\t\twidth: 200px;\n\t\theight: 200px;\n\t}\n\t.right{\n\t\tfloat: right;\n\t\tbackground-color: blue;\n\t\twidth: 200px;\n\t\theight: 200px;\n\t}\n\t.main{\n\t\tbackground-color: green;\n\t\theight: 200px;\n\t\tmargin: 0 210px;\n\t}\n\t#footer{\n\t\tclear: both;\n\t\theight: 200px;\n\t\tbackground-color: orange;\n\t}\n</style>\n<body>\n\t<div id=\"head\">左右固定宽度并且向两边浮动，中间的div设置两边的margin</div>\n\t<div id=\"body\">\n\t\t<div class=\"left\"></div>\n\t\t<div class=\"right\"></div>\n\t\t<div class=\"main\">该方案有一个缺陷，在小屏幕情况下回导致right被挤下去，main没有了</div>\n\t</div>\n\t<div id=\"footer\"></div>\n</body>\n```\n**实现过程中需要注意:**<br/>\n**1.** 该方式只需要注意中间自适应的div需要放在left和right容器的后面。<br/>\n**2.** left和right容器向两边浮动。<br/>\n\n### 第三种 通过flex属性来实现<br/>\n**主要代码如下：**<br/>\n```\n<!DOCTYPE html>\n<html>\n<meta charset=\"utf-8\">\n<head>\n\t<title>使用flex 实现“双飞翼布局”</title>\n</head>\n<style type=\"text/css\">\n\t#main{\n\t\tdisplay: flex;\n\t\tdisplay: -webkit-flex;//谷歌浏览器加前缀\n\t\tflex-flow: row nowrap;\n\t\tjustify-content: flex-start;\n\t\talign-items: center;\n\t}\n\t.left{\n\t\tflex: 0 0 auto;\n\t\twidth:100px;\n\t\theight: 200px;\n\t\tbackground-color: red;\n\t\tword-wrap: break-word; \n\t\toverflow: hidden;\n\t}\n\t.main{\n\t\tflex: 1 1 auto;\n\t\theight: 200px;\n\t\tbackground-color: green;\n\t}\n\t.right{\n\t\tflex: 0 0 auto;\n\t\twidth: 100px;\n\t\theight: 200px;\n\t\tbackground-color: yellow;\n\t}\n</style>\n<body>\n\t<div id=\"main\">\n\t\t<div class=\"left\">flex 语法我参照了阮一峰关于flex语法介绍 http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html</div>\n\t\t<div class=\"main\"></div>\n\t\t<div class=\"right\"></div>\n\t</div>\n</body>\n</html>\n```\n如果未了解过flex布局请移至文末点击链接查看 阮一峰大神写的关于flex语法\n\n## 3、定位布局\n这边就不絮絮叨叨的讲一些基础的css定位知识了（ps:不会的请自行到w3c官网查阅），我主要来讲解一下工作中遇到的坑。以免其他人和我一样掉入坑中。<br/>\n### 第一：使用多个fixed时，注意自己需要基于什么定位，因为如果父级有用transform属性时，可能会导致子元素的fixed基于父元素容器定位，而不是基于body定位。效果如下：<br/>\n    \n![](160d06ff9f0ae490.jpg)\n在上图中我可以发现中间黑色的小框是基于父级来定位，并且宽度也基于父容器的50%。详细的请看下面代码：\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>关于position的定位的坑</title>\n</head>\n<style type=\"text/css\">\n    body{\n        margin: 0;\n        padding: 0;\n    }\n    i{\n        font-style: normal;\n        cursor: pointer;\n    }\n    #delete-button{\n        position: absolute;\n        left: 45%;\n        top: 45%;\n        text-align: center;\n        vertical-align: middle;\n        height: 50px;\n        margin: auto;\n        cursor: pointer;\n    }\n    #delete-button > i{\n        display: inline-block;\n        width: 32px;\n        height: 32px;\n        border-radius: 16px;\n        background-color: orange;\n        color: red;\n        font-size: 32px;\n        vertical-align: middle;\n        line-height: 28px;\n    }\n    /*第一个模态框的样式*/\n    #layout{\n        display: none;\n        width: 100%;\n        height: 100%;\n    }\n    /*使用flex布局水平竖直居中*/\n    /*#layout-box{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        display: flex;\n        display: -webkit-flex;\n        flex-flow: column nowrap;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(0,0,0,0.3);\n    }*/\n    /*使用postion 和 transform 水平垂直居中*/\n    #layout-box{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0,0,0,0.3);\n    }\n    .modal-dialog{\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        width: 500px;\n        height: 200px;\n        border-radius: 10px;\n        transform: translate(-50%, -50%);\n        -webkit-transform: translate(-50%, -50%);\n        -moz-transform: translate(-50%, -50%);\n        -o-transform: translate(-50%, -50%);\n        background-color: #fff;\n    }\n    .dialog-title{\n        text-align: center;\n        color: #333;\n        font-size: 28px;\n        margin-bottom: 10px;\n    }\n    .dialog-content{\n        text-align: center;\n        color: #666;\n        font-size: 18px;\n    }\n    .dialog-button{\n        margin-top: 20px;\n        width: 100%;\n        color: #333;\n    }\n    .dialog-button >.button-box{\n        display: inline-block;\n        width: 48%;\n        text-align: center;\n    }\n    .button-box span{\n        display: inline-block;\n        padding: 10px;\n        color: #fff;\n        border-radius: 6px;\n        cursor: pointer;\n    }\n    #confirm{\n        background-color: #27ad9a;\n    }\n    #cancel{\n        background-color: red;\n    }\n    /*添加按钮的样式*/\n    #add-button > i{\n        display: inline-block;\n        width: 32px;\n        height: 32px;\n        border-radius: 16px;\n        background-color: #27ad9a;\n        color: #fff;\n        font-size: 32px;\n        vertical-align: middle;\n        line-height: 28px;\n        text-align: center;\n    }\n    #add-button{\n        display: inline-block;\n        cursor: pointer;\n    }\n    /*第二个模态框的样式*/\n    .layout2{\n        display: none;\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background-color: rgba(0,0,0,0.2);\n    }\n    .modal-dialog2{\n        position: fixed;\n        left: 50%;\n        top: 50%;\n        width: 50%;\n        height: 50%;\n        border-radius: 10px;\n        transform: translate(-50%, -50%);\n        -webkit-transform: translate(-50%, -50%);\n        -moz-transform: translate(-50%, -50%);\n        -o-transform: translate(-50%, -50%);\n        background-color: rgba(0,0,0,0.2);\n    }\n    .modal-dialog2 > span{\n        display: block;\n    }\n    .modal-text{\n        float: left;\n    }\n    #close{\n        color: red;\n        font-size: 24px;\n        float: right;\n        cursor: pointer;\n    }\n</style>\n<body>\n    <div id=\"delete-button\"><i>-</i>删除</div>\n    <div id=\"layout\">\n        <div id=\"layout-box\">\n            <div class=\"modal-dialog\">\n                <div class=\"dialog-title\">提示</div>\n                <div class=\"dialog-content\">是否删除该项,点击确定</div>\n                <div class=\"dialog-button\">\n                    <div class=\"button-box\">\n                        <span id=\"confirm\">确定</span>\n                    </div>\n                    <div class=\"button-box\">\n                        <span id=\"cancel\">取消</span>\n                    </div>\n                </div>\n                <div id=\"add-button\"><i>+</i>添加</div>\n                <div class=\"layout2\">\n                    <div class=\"modal-dialog2\">\n                        <span class=\"modal-text\">你是我的小可爱</span>\n                        <span id=\"close\">关闭</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n<script type=\"text/javascript\">\n    document.getElementById(\"delete-button\").onclick= function(){\n        var layout = document.getElementById(\"layout\")\n        layout.style.display = \"block\"\n    }\n    document.getElementById(\"confirm\").onclick=function(){\n        var layout = document.getElementById(\"layout\")\n        layout.style.display = \"none\"\n    }\n    document.getElementById(\"cancel\").onclick=function(){\n        var layout = document.getElementById(\"layout\")\n        layout.style.display = \"none\"\n    }\n    document.getElementById(\"add-button\").onclick=function(){\n        var layout = document.getElementsByClassName(\"layout2\")\n        layout[0].style.display = \"block\"\n    }\n    document.getElementById(\"close\").onclick=function(){\n        var layout = document.getElementsByClassName(\"layout2\")\n        layout[0].style.display = \"none\"\n    }\n</script>\n</html>\n```\n如果我们尝试把父容器上的transform属性去除，我们可以看到 子容器没有基于父容器定位，而是基于body定位的，宽度也是基于body给的50%宽度。效果图如下：\n![](160d07734ba09511.jpg)\n详细请看代码：\n\n```\n<!DOCTYPE html>\n<html>\n<head>\n    <title>关于position的定位的坑</title>\n</head>\n<style type=\"text/css\">\n    body{\n        margin: 0;\n        padding: 0;\n    }\n    i{\n        font-style: normal;\n        cursor: pointer;\n    }\n    #delete-button{\n        position: absolute;\n        left: 45%;\n        top: 45%;\n        text-align: center;\n        vertical-align: middle;\n        height: 50px;\n        margin: auto;\n        cursor: pointer;\n    }\n    #delete-button > i{\n        display: inline-block;\n        width: 32px;\n        height: 32px;\n        border-radius: 16px;\n        background-color: orange;\n        color: red;\n        font-size: 32px;\n        vertical-align: middle;\n        line-height: 28px;\n    }\n    /*第一个模态框的样式*/\n    #layout{\n        display: none;\n        width: 100%;\n        height: 100%;\n    }\n    /*使用flex布局水平竖直居中*/\n    #layout-box{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        display: flex;\n        display: -webkit-flex;\n        flex-flow: column nowrap;\n        justify-content: center;\n        align-items: center;\n        background-color: rgba(0,0,0,0.3);\n    }\n    /*使用postion 和 transform 水平垂直居中*/\n    .modal-dialog{\n        width: 500px;\n        height: 200px;\n        border-radius: 10px;\n        background-color: #fff;\n    }\n    .dialog-title{\n        text-align: center;\n        color: #333;\n        font-size: 28px;\n        margin-bottom: 10px;\n    }\n    .dialog-content{\n        text-align: center;\n        color: #666;\n        font-size: 18px;\n    }\n    .dialog-button{\n        margin-top: 20px;\n        width: 100%;\n        color: #333;\n    }\n    .dialog-button >.button-box{\n        display: inline-block;\n        width: 48%;\n        text-align: center;\n    }\n    .button-box span{\n        display: inline-block;\n        padding: 10px;\n        color: #fff;\n        border-radius: 6px;\n        cursor: pointer;\n    }\n    #confirm{\n        background-color: #27ad9a;\n    }\n    #cancel{\n        background-color: red;\n    }\n    /*添加按钮的样式*/\n    #add-button > i{\n        display: inline-block;\n        width: 32px;\n        height: 32px;\n        border-radius: 16px;\n        background-color: #27ad9a;\n        color: #fff;\n        font-size: 32px;\n        vertical-align: middle;\n        line-height: 28px;\n        text-align: center;\n    }\n    #add-button{\n        display: inline-block;\n        cursor: pointer;\n    }\n    /*第二个模态框的样式*/\n    .layout2{\n        display: none;\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background-color: rgba(0,0,0,0.2);\n    }\n    .modal-dialog2{\n        position: fixed;\n        left: 50%;\n        top: 50%;\n        width: 50%;\n        height: 50%;\n        border-radius: 10px;\n        transform: translate(-50%, -50%);\n        -webkit-transform: translate(-50%, -50%);\n        -moz-transform: translate(-50%, -50%);\n        -o-transform: translate(-50%, -50%);\n        background-color: rgba(0,0,0,0.2);\n    }\n    .modal-dialog2 > span{\n        display: block;\n    }\n    .modal-text{\n        float: left;\n    }\n    #close{\n        color: red;\n        font-size: 24px;\n        float: right;\n        cursor: pointer;\n    }\n</style>\n<body>\n    <div id=\"delete-button\"><i>-</i>删除</div>\n    <div id=\"layout\">\n        <div id=\"layout-box\">\n            <div class=\"modal-dialog\">\n                <div class=\"dialog-title\">提示</div>\n                <div class=\"dialog-content\">是否删除该项,点击确定</div>\n                <div class=\"dialog-button\">\n                    <div class=\"button-box\">\n                        <span id=\"confirm\">确定</span>\n                    </div>\n                    <div class=\"button-box\">\n                        <span id=\"cancel\">取消</span>\n                    </div>\n                </div>\n                <div id=\"add-button\"><i>+</i>添加</div>\n                <div class=\"layout2\">\n                    <div class=\"modal-dialog2\">\n                        <span class=\"modal-text\">你是我的小可爱</span>\n                        <span id=\"close\">关闭</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n<script type=\"text/javascript\">\n    document.getElementById(\"delete-button\").onclick= function(){\n        var layout = document.getElementById(\"layout\")\n        layout.style.display = \"block\"\n    }\n    document.getElementById(\"confirm\").onclick=function(){\n        var layout = document.getElementById(\"layout\")\n        layout.style.display = \"none\"\n    }\n    document.getElementById(\"cancel\").onclick=function(){\n        var layout = document.getElementById(\"layout\")\n        layout.style.display = \"none\"\n    }\n    document.getElementById(\"add-button\").onclick=function(){\n        var layout = document.getElementsByClassName(\"layout2\")\n        layout[0].style.display = \"block\"\n    }\n    document.getElementById(\"close\").onclick=function(){\n        var layout = document.getElementsByClassName(\"layout2\")\n        layout[0].style.display = \"none\"\n    }\n</script>\n</html>\n```\n### 第二：解决在手机上的抖动问题（ps：这个问题我参照了网上大神写的一篇博客请移至文末查看）\n**一、**在webkit内核浏览器中 给fixed加上防抖样式 - webkit - transform: translateZ(0);\n\n**二、**设置html 和body 的css {height:100%;overflow:auto;margin:0;} 这个影响全局样式不建议使用。\n\n**三、** 在fiexd内设置position:absolute，如下：\n\n```\n<div style=\"position:fiexd;bottom:0px;\">\n\n  <div style=\"position:absolute;\">\n\n  </div>\n\n</div>\n```\n![](160d07c4ef1f8183.jpg)\n\n## 4、百分比布局 主要通过设置元素的宽度为百分比或者高度为百分比。比如：width:50%; height:50%; 这样的写法。\n\n## 5、响应式布局（主要使用媒体查询来实现响应式设计）\n### 主要使用CSS3 @media 来做不同终端的响应式设计\n主要在css文件中写入\n```\n@media screen and (max-width:600px){\n    写入当屏幕小于或等于600px时的样式\n}\n@media screen and (min-width:900px){\n    写入当屏幕大于或等于900px时的样式\n}\n@media screen and (min-width:600px) and (max-width:900px){\n    写入当屏幕在600px-900px之间的样式\n}\n@media screen and (max-device-width: 480px){\n    写入最大设备宽度为480px，比如说iPhone上的显示，这里的max-device-width所指的是设备的实际分辨率，也就是指可视面积分辨率\n}\n@media only screen and (-webkit-min-device-pixel-ratio: 2){\n    写入专门针对iPhone4的移动设备样式\n}\n@media all and (orientation:portrait){\n    写入设备在纵向时的样式\n}\n@media all and (orientation:landscape){\n    写入设备在横向时的样式\n}\n@media not print and (max-width: 1200px){\n    not是用来排除某种制定的媒体类型\n    写入在除打印设备和设备宽度小于1200px下的所有设备的样式\n}\n@media only screen and (max-device-width:240px){\n    only用来定某种特定的媒体类型,可以用来排除不支持媒体查询的浏览器。\n    写入只能在最大设备宽度为240px的屏幕下使用的样式\n}\n\n```\n\n## 参考的文章：<br/>\n[CSS3与页面布局学习总结（四）——页面布局的多种方法 ](http://www.cnblogs.com/zhangyongl/p/6123522.html)<br/>\n[阮一峰——关于flex语法介绍](http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html)<br/>\n[最全CSS各种布局详解](https://www.jianshu.com/p/66550dc3a825)<br/>\n[CSS 布局说——可能是最全的](https://mp.weixin.qq.com/s/iQ8mSr4oEAC8Ve6IdiN9jQ)<br/>\n[CSS 黑魔法小技巧，让你少写不必要的JS，代码更优雅](https://github.com/jawil/blog/issues/29)\n[实用的60个CSS代码片段](https://www.jianshu.com/p/e878122a92a3)\n[解决CSS position:fixed 抖动问题](http://www.cnblogs.com/Arlar/p/5660368.html)\n[介绍了各手机的像素密度_(-webkit-min-device-pixel-ratio)_响应式布局](http://blog.csdn.net/fgdfgasd/article/details/52835755)<br/>\n[张鑫旭关于设备像素比devicePixelRatio简单介绍](http://www.zhangxinxu.com/wordpress/2012/08/window-devicepixelratio/)<br/>\n[CSS3--媒体查询@media](http://blog.csdn.net/mpdemp/article/details/70282004)\n\n\n## 小结：\n起初我并不注重css学习，但项目中每张页面都要做响应式，所以为了自己少写css代码，提高工作效率，并减少冗余css，我不得不好好了解css布局，来应对各种UI图纸和响应式。同时写这篇文章，也希望各位，不要再去踩相同的坑。初次写文章，如若文中有什么不对的地方，还望指正，谢谢各位看官大佬们。","tags":["前端","css"]}]